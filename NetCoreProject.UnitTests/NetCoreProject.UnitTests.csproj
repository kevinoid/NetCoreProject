<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Description>Unit tests for NetCoreProject.</Description>

    <!-- Multi-target all frameworks to test, newest first (for VS runner) -->
    <TargetFrameworks>net6.0</TargetFrameworks>
    <!-- Test older frameworks in CI (to avoid requiring devs to install) -->
    <!--
      TODO: Test opportunistically outside of CI?
      https://docs.microsoft.com/dotnet/framework/migration-guide/how-to-determine-which-versions-are-installed
      Newtonsoft.Json passes TestFrameworks from checks in build.ps1.  Painful.
    -->
    <TargetFrameworks Condition="'$(CI)' == 'True'">$(TargetFrameworks);netcoreapp3.1</TargetFrameworks>
    <TargetFrameworks Condition="'$(CI)' == 'True' and $([MSBuild]::IsOSPlatform('Windows'))">$(TargetFrameworks);net461</TargetFrameworks>

    <!--
      Disable check for EOL Target Framework (NETSDK1138).
      Libraries may want to test against unsupported frameworks to accommodate
      users or simplify upgrade paths.  No need to warn or fail build.
    -->
    <CheckEolTargetFramework>false</CheckEolTargetFramework>

    <IsPackable>false</IsPackable>

    <!--
      Analyze additional files (for Puma Scan)
      https://github.com/pumasecurity/puma-scan/wiki/Installation#step-3-enable-additional-file-analysis
    -->
    <AdditionalFileItemNames>$(AdditionalFileItemNames);Content</AdditionalFileItemNames>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DocumentationFile>bin\Release\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DocumentationFile>bin\Debug\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="stylecop.json" />
  </ItemGroup>

  <ItemGroup>
    <AdditionalFiles Include="stylecop.json" />
  </ItemGroup>

  <ItemGroup>
    <!--
      Note:  Intentionally not using the following analyzers:
      Microsoft.CodeQuality.Analyzers (part of NetAnalyzers)
      Microsoft.NetCore.Analyzers (part of NetAnalyzers)
      Microsoft.NetFramework.Analyzers (part of NetAnalyzers)
      Microsoft.CodeAnalysis.VersionCheckAnalyzer (NetAnalyzers dep only)
      Text.Analyzers (https://github.com/dotnet/roslyn-analyzers/issues/2200)
    -->
    <PackageReference Include="coverlet.collector" Version="3.2.0">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <!--
      Microsoft.CodeAnalysis.NetAnalyzers ships with .NET SDK 5.
      Reference it conditionally to support building with old SDKs.
    -->
    <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="6.0.0" Condition="!$([MSBuild]::VersionGreaterThanOrEquals($(NETCoreSdkVersion), '5.0.0'))">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.4.0" />
    <!-- TODO: Add Microsoft.EntityFrameworkCore.Analyzers for EF Core proj -->
    <PackageReference Include="Puma.Security.Rules" Version="2.4.11">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Roslynator.Analyzers" Version="4.1.2">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="SonarAnalyzer.CSharp" Version="8.47.0.55603">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <!-- Note: .Unstable is recommended by devs due to update frequency.  See:
         https://github.com/DotNetAnalyzers/StyleCopAnalyzers/issues/2585 -->
    <PackageReference Include="StyleCop.Analyzers.Unstable" Version="1.2.0.435">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="xunit" Version="2.4.2" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.4.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <DotNetCliToolReference Include="dotnet-xunit" Version="2.3.1" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\NetCoreProject\NetCoreProject.csproj" />
  </ItemGroup>

</Project>
